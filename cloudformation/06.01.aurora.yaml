AWSTemplateFormatVersion: '2010-09-09'
Description: 'Aurora PostgreSQL'

Parameters:
  ProjectName:
    Type: String
    Default: bootapps-tmpl
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prd
  DatabaseName:
    Type: String
    Default: bootapps-tmpl
  EngineVersion:
    Type: String
    Default: 16.3
  MasterUsername:
    Type: String
    Default: postgres
  LogMinDurationStatement:
    Type: String
    Default: 500
  EncryptKmsKeyId:
    Type: String
    Default: alias/aws/rds
  EnableReaderInstance:
    Type: String
    AllowedValues:
      - true
      - false
    Default: false

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Mappings:
  # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  specs:
    dev:
      DBInstanceClass: db.t3.medium
      AlermThresholdMaxConnection: 300
      LogMinDurationStatement: 500
      MaxCapacity: 1
      MinCapacity: 1
    prd:
      DBInstanceClass: db.t3.medium
      AlermThresholdMaxConnection: 300
      LogMinDurationStatement: 500
      MaxCapacity: 1
      MinCapacity: 1

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Conditions:
  # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  CreateReaderInstance: !Equals [ !Ref EnableReaderInstance, "true" ]
  HasReplica: !Equals [ !Ref Stage, prd-has-replica ]

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Resources:
  # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  # - - - - - - - - - - - - - - - - -
  DBSubnetGroup:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${ProjectName}-${Stage}-db-subnet-group
      DBSubnetGroupDescription: Public Subnet for Aurora
      SubnetIds:
        - Fn::ImportValue:
            !Sub "${ProjectName}-${Stage}-network-public1-subnet"
        - Fn::ImportValue:
            !Sub "${ProjectName}-${Stage}-network-public2-subnet"
        - Fn::ImportValue:
            !Sub "${ProjectName}-${Stage}-network-public3-subnet"
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - Aurora
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage

  # - - - - - - - - - - - - - - - - -
  DBClusterParameterGroup:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      DBClusterParameterGroupName: !Sub "${ProjectName}-${Stage}-aurora-parametergroup-cluster"
      Description: !Join
        - ' '
        - - !Ref ProjectName
          - !Ref Stage
          - cluster parameter group for postgres16
      Family: aurora-postgresql16
      Parameters:
        client_encoding: UTF8
        timezone: Asia/Tokyo
        log_min_duration_statement: !FindInMap [ specs, !Ref Stage, LogMinDurationStatement ] # 指定したミリ秒以上要したクエリを記録する（0で全てのクエリを記録）
        log_duration: 1
        log_error_verbosity: verbose
        shared_preload_libraries: pg_stat_statements
        pg_stat_statements.max: 2000
        pg_stat_statements.track: top
        pg_stat_statements.save: 1
        rds.enable_plan_management: 1
        apg_plan_mgmt.capture_plan_baselines: automatic
        apg_plan_mgmt.use_plan_baselines: true
        apg_ccm_enabled: 1
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - DBClusterParameterGroup
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage

  # - - - - - - - - - - - - - - - - -
  DBInstanceParameterGroup:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::RDS::DBParameterGroup
    Properties:
      DBParameterGroupName: !Sub "${ProjectName}-${Stage}-aurora-parametergroup-instance"
      Description: !Join
        - ' '
        - - !Ref ProjectName
          - !Ref Stage
          - parameter group
          - for postgres16
          - instance
      Family: aurora-postgresql16
      Parameters:
        application_name: !Ref ProjectName
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - DBParameterGroup
              - Instance
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage

  # - - - - - - - - - - - - - - - - -
  DBCluster:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::RDS::DBCluster
    DependsOn:
      - DBSubnetGroup
      - DBClusterParameterGroup
    Properties:
      AvailabilityZones:
        - !Select
          - 0
          - Fn::GetAZs: !Ref AWS::Region
        - !Select
          - 1
          - Fn::GetAZs: !Ref AWS::Region
      DBClusterIdentifier: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - DBCluster
      BackupRetentionPeriod: 30
      DatabaseName: !Ref DatabaseName
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: aurora-postgresql
      EngineVersion: !Ref EngineVersion
      Port: 5432
      PreferredBackupWindow: 18:00-19:00
      PreferredMaintenanceWindow: Tue:17:00-Tue:18:00
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Sub "{{resolve:ssm-secure:/${ProjectName}/${Stage}/aurora/masteruser/password}}"
      StorageEncrypted: true
      KmsKeyId: !Ref EncryptKmsKeyId
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - dbcluster
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage
      VpcSecurityGroupIds:
        - Fn::ImportValue:
            !Sub "${ProjectName}-${Stage}-sg-postgresql"

  # - - - - - - - - - - - - - - - - -
  DBInstance:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::RDS::DBInstance
    DependsOn:
      - DBCluster
      - DBInstanceParameterGroup
      - DBMonitorRole
    Properties:
      DBInstanceIdentifier: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - dbinstance
      DBClusterIdentifier: !Ref DBCluster
      DBParameterGroupName: !Ref DBInstanceParameterGroup
      Engine: aurora-postgresql
      EngineVersion: !Ref EngineVersion
      DBInstanceClass: !FindInMap [ specs, !Ref Stage, DBInstanceClass ]
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 5
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - DBInstance
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage

  DBReaderInstance:
    Type: AWS::RDS::DBInstance
    Condition: CreateReaderInstance
    DependsOn:
      - DBCluster
      - DBInstanceParameterGroup
      - DBMonitorRole
    Properties:
      DBInstanceIdentifier: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - dbreaderinstance
      DBClusterIdentifier: !Ref DBCluster
      DBParameterGroupName: !Ref DBInstanceParameterGroup
      DBInstanceClass: !FindInMap [ specs, !Ref Stage, DBInstanceClass ]
      Engine: aurora-postgresql
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 5
      MonitoringRoleArn: !GetAtt DBMonitorRole.Arn
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref ProjectName
              - !Ref Stage
              - DBReaderInstance
        - Key: Service
          Value: !Ref ProjectName
        - Key: Stage
          Value: !Ref Stage

  # - - - - - - - - - - - - - - - - -
  ScalableTarget:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: HasReplica
    DependsOn:
      - DBCluster
    Properties:
      MaxCapacity: !FindInMap [ specs, !Ref Stage, MaxCapacity ]
      MinCapacity: !FindInMap [ specs, !Ref Stage, MinCapacity ]
      ResourceId: !Sub "cluster:${DBCluster}"
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/rds.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_RDSCluster"
      ScalableDimension: rds:cluster:ReadReplicaCount
      ServiceNamespace: rds

  # - - - - - - - - - - - - - - - - -
  ScalingPolicy:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: HasReplica
    DependsOn:
      - ScalableTarget
    Properties:
      ScalingTargetId: !Ref ScalableTarget
      ServiceNamespace: rds
      PolicyName: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - Aurora
          - ScalePolicy
      PolicyType: TargetTrackingScaling
      ScalableDimension: rds:cluster:ReadReplicaCount
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: RDSReaderAverageCPUUtilization
        TargetValue: 80.0
        ScaleOutCooldown: 300
        ScaleInCooldown: 300
        DisableScaleIn: false   # スケールインする

  # - - - - - - - - - - - - - - - - -
  DBMonitorRole: #(M)
    # - - - - - - - - - - - - - - - - -
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - sts:AssumeRole

  # - - - - - - - - - - - - - - - - -
  CloudWatchRDSCPUUtilization80over:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join
        - ' '
        - - "RDS CPU Utilization > 80% for 3 minutes"
          - !Ref DBCluster
      AlarmDescription: !Ref DBCluster
      ActionsEnabled: true
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 60
      Statistic: Maximum
      Threshold: "80.0"
      TreatMissingData: breaching
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster

  # - - - - - - - - - - - - - - - - -
  CloudWatchRDSLowFreeableMemoryunder100MB:
    # - - - - - - - - - - - - - - - - -
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join
        - ' '
        - - "RDS FreeableMemory < 100MB for 1 minutes"
          - !Ref DBCluster
      AlarmDescription: !Ref DBCluster
      ActionsEnabled: true
      ComparisonOperator: LessThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: "104857600.0"
      TreatMissingData: breaching
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster

  # - - - - - - - - - - - - - - - - -
  CloudWatchRDSDatabaseConnections80over:
    # - - - - - - - - - - - - - - - - -
    # max_connections LEAST({DBInstanceClassMemory/9531392},5000)
    # 16GB memory
    # 1024 * 1024 * 1024 * 16 = 17,179,869,184
    # max_connections = 17,179,869,184/9,531,392 = 1802.45122475
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join
        - ' '
        - - "RDS Database Connections > 1441(1802 * 80%) for 1 minutes"
          - !Ref DBCluster
      AlarmDescription: !Ref DBCluster
      ActionsEnabled: true
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 60
      Statistic: Maximum
      Threshold: !FindInMap [ specs, !Ref Stage, AlermThresholdMaxConnection ]
      TreatMissingData: breaching
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster

Outputs:
  InstanceEndPoint:
    Description: Aurora Instance Endpoint
    Value: !GetAtt DBCluster.Endpoint.Address
    Export:
      Name: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - DBInstanceEndPoint

  ReaderInstanceEndPoint:
    Condition: CreateReaderInstance
    Description: Aurora Reader Instance Endpoint
    Value: !GetAtt DBReaderInstance.Endpoint.Address
    Export:
      Name: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - DBReaderInstanceEndPoint