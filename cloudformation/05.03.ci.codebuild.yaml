AWSTemplateFormatVersion: '2010-09-09'
Description: 'Codebuild.'

Parameters:
  ProjectName:
    Type: String
    Default: bootapps-tmpl
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prd
  ApplicationName:
    Type: String
    Default: webapp-example
  BuildSpecFileName:
    Type: String
    Default: buildspec.yml
  SourceDirectoryName:
    Type: String
    Default: webapp-example

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Mappings:
  # + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  spec:
    dev:
      ComputeType: BUILD_GENERAL1_MEDIUM

    prod:
      ComputeType: BUILD_GENERAL1_MEDIUM

    # BUILD_GENERAL1_SMALL  = 2vCPU/RAM3GB
    # BUILD_GENERAL1_MEDIUM = 4vCPU/RAM7GB
    # BUILD_GENERAL1_LARGE  = 8vCPU/RAM15GB

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Resources:
# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
  # - - - - - - - - - - - - - - - - -
  CodeBuild:
  # - - - - - - - - - - - - - - - - -
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: false
      Description: !Sub "build ${ProjectName}-${ApplicationName}-${Stage}"
      Name: !Join
        - '-'
        - - !Ref ProjectName
          - !Ref Stage
          - !Ref ApplicationName
          - buiild
      ServiceRole:
        Fn::ImportValue:
          !Sub CodebuildRole-${ProjectName}-${Stage}
#      VpcConfig:
#        VpcId:
#          Fn::ImportValue:
#            !Sub ${ProjectName}-${Stage}-network-vpc
#        SecurityGroupIds:
#          - Fn::ImportValue:
#              !Sub ${ProjectName}-${Stage}-sg-codebuild
#        Subnets:
#          - Fn::ImportValue:
#              !Sub ${ProjectName}-${Stage}-network-public1-subnet
#          - Fn::ImportValue:
#              !Sub ${ProjectName}-${Stage}-network-public2-subnet
#          - Fn::ImportValue:
#              !Sub ${ProjectName}-${Stage}-network-public3-subnet
      Environment:
        Type: LINUX_CONTAINER
        # CodeBuild内でdockerビルドできるようにするために特権付与
        PrivilegedMode: True
        ComputeType: !FindInMap [ spec, !Ref Stage, ComputeType ]
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          # ======================
          # 環境変数
          # ======================
          - Name: ENV
            Value: !Ref Stage
            Type: PLAINTEXT
          - Name: IMAGE_REPOSITORY_NAME
            Value:
              Fn::ImportValue:
                !Sub EcrRepository-${ProjectName}-${Stage}-${ApplicationName}
            Type: PLAINTEXT
          - Name: ECS_EXTRA_S3_BUCKET_NAME
            Value:
              Fn::ImportValue:
                !Sub S3Bucket-${ProjectName}-${Stage}-ecs-extras
            Type: PLAINTEXT

      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub "${SourceDirectoryName}/${BuildSpecFileName}"

      TimeoutInMinutes: 30
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName:
            Fn::ImportValue:
              !Sub CodeBuild-LogGroup-${ProjectName}-${Stage}
          StreamName: !Sub ${ProjectName}-${ApplicationName}-${Stage}

# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +
Outputs:
# + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +

  # - - - - - - - - - - - - - - - - -
  CodeBuild:
    Value: !Ref CodeBuild
    Export:
      Name: !Join
        - '-'
        - - CodeBuild
          - !Ref ProjectName
          - !Ref Stage
          - !Ref ApplicationName
